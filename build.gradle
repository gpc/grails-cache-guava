plugins {
    id "groovy"
    id "org.grails.grails-web"
    id "org.grails.grails-gsp"
    id "org.grails.grails-plugin" version '6.2.1'
    id "application"
}

group "io.github.gpc"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
}

dependencies {
    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    compileOnly("io.micronaut:micronaut-inject-groovy")
    console("org.grails:grails-console")
    testImplementation("org.spockframework:spock-core")
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.grails:grails-web-testing-support")
    testImplementation("org.grails.plugins:geb")
    testImplementation platform("org.seleniumhq.selenium:selenium-bom:${seleniumVersion}")
    testImplementation("org.seleniumhq.selenium:selenium-api")
    testImplementation("org.seleniumhq.selenium:selenium-remote-driver")
    testImplementation("org.seleniumhq.selenium:selenium-support")
    testImplementation("org.seleniumhq.selenium:selenium-http")
    testImplementation("org.seleniumhq.selenium:selenium-chrome-driver")
    testImplementation "org.testcontainers:spock:1.20.2"
    testImplementation "org.testcontainers:selenium:1.20.2"

    implementation "org.grails.plugins:cache"

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:33.3.1-jre'
}

application {
    mainClass.set("grails.cache.guava.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}

//grailsPublish {
//
//    githubSlug = 'itds-ch/grails-cache-guava'
//    license {
//        name = 'Apache-2.0'
//    }
//    title = project.name
//    desc = "The guava cache provides a simple in memory cache with maximal capacity and TTL."
//    developers = [mkobel: "Moritz obel", sbglasius: 'SÃ¸ren Berg Glasius']
//}

